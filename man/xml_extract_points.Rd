% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/xml_extract_points.R
\name{xml_extract_points}
\alias{xml_extract_points}
\title{Extract point information from FORUM XML file}
\usage{
xml_extract_points(
  top,
  eyeformat = "OD",
  dropXY = eyeformat \%in\% c("OD", "OS"),
  extra4fields = FALSE,
  asvector = TRUE,
  verbose = 0
)
}
\arguments{
\item{top}{Root node of an xml file}

\item{eyeformat}{Determine the ordering of the response vector/matrix. If OD (default), the responses are ordered from top left to bottom right as they would appear on the paper printout for a right eye. If the xml file corresponds to a right eye, no transformation is done. If the xml file corresponds to a left eye, the locations are flipped across the y-axis. If eyeformat is OS, the responses are ordered from top left to bottom right as they would appear on the paper printout for left eye. If eyeformat is "file", the responses are ordered top left to bottom right without reference to eye. If eyeformat is "raw", the responses are in the order in which they were stored in the xml file.}

\item{dropXY}{Should the values of X and Y be included in the output for each point. The values of X and Y are standard for a given test pattern and eye laterality. For eyeformats OD and OS, the default is to drop X and Y. For eyeformats file and raw, the default is to keep X and Y.}

\item{extra4fields}{Each X,Y point provides either 7 or 11 pieces of information.  Are all 11 desired (\code{TRUE}) or just 7 (\code{FALSE}, default).}

\item{asvector}{Determine whether the output is returned as a vector (\code{TRUE}, default) or as a matrix (FALSE). \code{FALSE} can be useful for debugging.}

\item{verbose}{Control level of printing to console. The default (0) is no printing; larger values may produce more printing.}
}
\value{
a character vector (if \code{asvector == TRUE}) with 4 components (TestID, TestPattern, Eye, and Format) extracted from the XML and all points if the TestPattern is recognized; or (if \code{asvector == FALSE}) a character matrix with one column for each point.
}
\description{
Extract point information from FORUM XML file
}
\examples{
   exdatadir <- system.file('extdata', package = 'FORUMVF')
   parsed <- xml2::read_xml(sprintf("\%s/testdata.xml", exdatadir))
   root <- xml2::xml_root(parsed)
   old_hdrtxt <- set_hdrtxt('attr')
   xml_extract_points(root)
   set_hdrtxt(old_hdrtxt)
}
