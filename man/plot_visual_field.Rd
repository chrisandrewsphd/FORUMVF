% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_visual_field.R
\name{plot_visual_field}
\alias{plot_visual_field}
\title{Plot a HVF based on extracted matrix (or vector).}
\usage{
plot_visual_field(
  mat,
  valrow = "Sens Val",
  add = FALSE,
  probs = FALSE,
  textcolor = "black",
  strip.0 = TRUE,
  usedatarange = FALSE,
  addlegend = TRUE,
  format = "XY"
)
}
\arguments{
\item{mat}{character matrix containing 24-2 SITA Fast test}

\item{valrow}{Name of the row in mat containing the values to plot}

\item{add}{Should the values be added to an existing plot (TRUE) or a new plot (FALSE, default)?}

\item{probs}{Are the values coded probabilities (TRUE) or VF scores (FALSE, default)}

\item{textcolor}{Color of text to be plotted. Default is "black".}

\item{strip.0}{Should trailing ".0" be removed before plotting? Default is TRUE.}

\item{usedatarange}{Should the graph boundaries be determined by rows "X" and "Y" of the data (TRUE) or default values for 24-2 display (FALSE, default).}

\item{addlegend}{Should the graph have p-value legend at bottom. Default is TRUE (only relevant if probs is TRUE).}

\item{format}{Format of test. Default ("XY") is to plot everything based on rows "X" and "Y" of mat.  Other possibilities are "24-2 OD" and "24-2 OS" that can be used when "X" and "Y" are not provided.}
}
\value{
invisible NULL. Plot produced as side effect.
}
\description{
Plot a HVF based on extracted matrix (or vector).
}
\examples{
   exdatadir <- system.file('extdata', package = 'FORUMVF')
   parsed <- xml2::read_xml(sprintf("\%s/testdata.xml", exdatadir))
   root <- xml2::xml_root(parsed)
   vfmat <- xml_points24dash2(root, asvector = FALSE, dropXY = FALSE)
   plot_visual_field(vfmat)
   plot_visual_field(vfmat, "ACSDV")
   plot_visual_field(vfmat, "GDCSDV")
   plot_visual_field(vfmat, "ACSDPV", probs = TRUE)
   plot_visual_field(vfmat, "GDCSDPV", probs = TRUE)

   par(mar = c(1,1,1,1), las = 1, pty = "s")
   plot_visual_field(vfmat, "GDCSDPV", probs = TRUE)
   plot_visual_field(vfmat, "GDCSDV", probs = FALSE, add = TRUE, textcolor = "red")
   abline(h = 0, v = 0)
}
